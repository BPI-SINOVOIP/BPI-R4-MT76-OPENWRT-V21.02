In upstream commit b236337 unit tests were extended to print stack traces when
crashing, using GNU extensions. But this won't work with musl etc. (no
"execinfo.h"), so we need to update the condition to make sure this is only
done when glibc is used.

--- a/pjlib-util/src/pjlib-util-test/main.c
+++ b/pjlib-util/src/pjlib-util-test/main.c
@@ -33,7 +33,7 @@ static void init_signals()
     sigaction(SIGALRM, &act, NULL);
 }
 
-#elif PJ_LINUX || PJ_DARWINOS
+#elif (defined(PJ_LINUX) && PJ_LINUX!=0 && defined(__GLIBC__)) || PJ_DARWINOS
 
 #include <execinfo.h>
 #include <signal.h>
--- a/pjlib/src/pjlib-test/main.c
+++ b/pjlib/src/pjlib-test/main.c
@@ -54,7 +54,7 @@ static void init_signals()
     sigaction(SIGALRM, &act, NULL);
 }
 
-#elif PJ_LINUX || PJ_DARWINOS
+#elif (defined(PJ_LINUX) && PJ_LINUX!=0 && defined(__GLIBC__)) || PJ_DARWINOS
 
 #include <execinfo.h>
 #include <signal.h>
--- a/pjmedia/src/test/main.c
+++ b/pjmedia/src/test/main.c
@@ -32,7 +32,7 @@
 #endif
 
 
-#if PJ_LINUX || PJ_DARWINOS
+#if (defined(PJ_LINUX) && PJ_LINUX!=0 && defined(__GLIBC__)) || PJ_DARWINOS
 
 #include <execinfo.h>
 #include <signal.h>
--- a/pjnath/src/pjnath-test/main.c
+++ b/pjnath/src/pjnath-test/main.c
@@ -32,7 +32,7 @@ static void init_signals()
     sigaction(SIGALRM, &act, NULL);
 }
 
-#elif PJ_LINUX || PJ_DARWINOS
+#elif (defined(PJ_LINUX) && PJ_LINUX!=0 && defined(__GLIBC__)) || PJ_DARWINOS
 
 #include <execinfo.h>
 #include <signal.h>
--- a/pjsip-apps/src/pjsua/main.c
+++ b/pjsip-apps/src/pjsua/main.c
@@ -80,7 +80,7 @@ static void setup_signal_handler(void)
     SetConsoleCtrlHandler(&CtrlHandler, TRUE);
 }
 
-#elif PJ_LINUX || PJ_DARWINOS
+#elif (defined(PJ_LINUX) && PJ_LINUX!=0 && defined(__GLIBC__)) || PJ_DARWINOS
 
 #include <execinfo.h>
 #include <signal.h>
--- a/pjsip/src/test/main.c
+++ b/pjsip/src/test/main.c
@@ -36,7 +36,7 @@ static void usage(void)
     list_tests();
 }
 
-#if PJ_LINUX || PJ_DARWINOS
+#if (defined(PJ_LINUX) && PJ_LINUX!=0 && defined(__GLIBC__)) || PJ_DARWINOS
 
 #include <execinfo.h>
 #include <signal.h>
